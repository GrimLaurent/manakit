/**
* @name flex-align
* @description Control the layout of flex containers with alignment, justification and more with responsive flexbox utilities.
* @type stylesheet
* 
* @author Laurent Grimaldi
* @package ManaKit
* @link https://developer.mozilla.org/fr/docs/Web/CSS/align-items
* @link https://developer.mozilla.org/fr/docs/Web/CSS/align-content
* @link https://developer.mozilla.org/fr/docs/Web/CSS/align-self
**/
@each $name in $flex-align {
  .align-#{$name} {
    align-items: #{$name} !important;
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align {
      .align-#{$size}-#{$name} {
        align-items: #{$name} !important;
      }
    }
  }
}

@each $name in $flex-align-content {
  @if ($name == center) {
    .align-content-#{$name} {
      align-content: #{$name} !important;
    }
  } @else {
    .align-content-#{$name} {
      align-content: flex-#{$name} !important;
    }
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-content {
      @if ($name == center) {
        .align-#{$size}-content-#{$name} {
          align-content: #{$name} !important;
        }
      } @else {
        .align-#{$size}-content-#{$name} {
          align-content: flex-#{$name} !important;
        }
      }
    }
  }
}

@each $name in $flex-align-self {
  @if ($name == center) {
    .align-self-#{$name} {
      align-self: #{$name} !important;
    }
  } @else {
    .align-self-#{$name} {
      align-self: flex-#{$name} !important;
    }
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-self {
      @if ($name == center) {
        .align-#{$size}-self-#{$name} {
          align-self: #{$name} !important;
        }
      } @else {
        .align-#{$size}-self-#{$name} {
          align-self: flex-#{$name} !important;
        }
      }
    }
  }
}

@each $name in $flex-align-grow-shrink {
  .align-grow-#{$name} {
    flex-grow: #{$name} !important;
  }
  .align-shrink-#{$name} {
    flex-shrink: #{$name} !important;
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-grow-shrink {
      .align-#{$size}-grow-#{$name} {
        flex-grow: #{$name} !important;
      }
      .align-#{$size}-shrink-#{$name} {
        flex-shrink: #{$name} !important;
      }
    }
  }
}
