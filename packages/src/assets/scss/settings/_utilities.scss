// DISPLAY
@each $name in $display-list {
  .d-#{$name} {
    display: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $display-list {
      .d-#{$size}-#{$name} {
        display: #{$name};
      }
    }
  }
}

@media print {
  @each $name in $display-list {
    .d-print-#{$name} {
      display: #{$name};
    }
  }
}

// FLEX
@each $name in $flex-list {
  .flex-#{$name} {
    flex-direction: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-list {
      .flex-#{$size}-#{$name} {
        flex-direction: #{$name};
      }
    }
  }
}

@each $name in $flex-align-list {
  .align-#{$name} {
    align-items: flex-#{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-list {
      .align-#{$size}-#{$name} {
        align-items: flex-#{$name};
      }
    }
  }
}

@each $name in $flex-align-content-list {
  @if ($name == center) {
    .align-content-#{$name} {
      align-content: #{$name};
    }
  } @else {
    .align-content-#{$name} {
      align-content: flex-#{$name};
    }
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-content-list {
      @if ($name == center) {
        .align-#{$size}-content-#{$name} {
          align-content: #{$name};
        }
      } @else {
        .align-#{$size}-content-#{$name} {
          align-content: flex-#{$name};
        }
      }
    }
  }
}

@each $name in $flex-align-self-list {
  @if ($name == center) {
    .align-self-#{$name} {
      align-self: #{$name};
    }
  } @else {
    .align-self-#{$name} {
      align-self: flex-#{$name};
    }
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-self-list {
      @if ($name == center) {
        .align-#{$size}-self-#{$name} {
          align-self: #{$name};
        }
      } @else {
        .align-#{$size}-self-#{$name} {
          align-self: flex-#{$name};
        }
      }
    }
  }
}

@each $name in $flex-align-grow-shrink-list {
  .align-grow-#{$name} {
    flex-grow: #{$name};
  }
  .align-shrink-#{$name} {
    flex-shrink: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-grow-shrink-list {
      .align-#{$size}-grow-#{$name} {
        flex-grow: #{$name};
      }
      .align-#{$size}-shrink-#{$name} {
        flex-shrink: #{$name};
      }
    }
  }
}

@each $name in $flex-align-justify-list {
  .justify-#{$name} {
    justify-content: flex-#{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-align-justify-list {
      .justify-#{$size}-#{$name} {
        justify-content: flex-#{$name};
      }
    }
  }
}

@each $name in $flex-wrap-list {
  .flex-#{$name} {
    flex-wrap: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $flex-wrap-list {
      .flex-#{$size}-#{$name} {
        flex-wrap: #{$name};
      }
    }
  }
}

//FLOAT
@each $name in $float-list {
  .float-#{$name} {
    float: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $float-list {
      .float-#{$size}-#{$name} {
        float: #{$name};
      }
    }
  }
}

//GRIDS
.col {
  width: 100%;
}

@each $name in $cols-list {
  .col-#{$name} {
    flex: 0 0 calc((100% / 12) * #{$name});
    max-width: calc((100% / 12) * #{$name});
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $cols-list {
      .col-#{$size}-#{$name} {
        flex: 0 0 calc((100% / 12) * #{$name});
        max-width: calc((100% / 12) * #{$name});
      }
    }
  }
}

@each $name in $cols-list {
  .offset-#{$name} {
    margin-left: calc((100% / 12) * #{$name});
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $cols-list {
      .offset-#{$size}-#{$name} {
        margin-left: calc((100% / 12) * #{$name});
      }
    }
  }
}

@each $name in $order-list {
  .order-#{$name} {
    order: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $order-list {
      .order-#{$size}-#{$name} {
        order: #{$name};
      }
    }
  }
}

//OVERFLOW
@each $name in $overflow-list {
  .overflow-#{$name} {
    order: #{$name};
  }
  .overflow-x-#{$name} {
    order: #{$name};
  }
  .overflow-y-#{$name} {
    order: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $overflow-list {
      .overflow-#{$size}-#{$name} {
        order: #{$name};
      }
      .overflow-#{$size}-x-#{$name} {
        order: #{$name};
      }
      .overflow-#{$size}-y-#{$name} {
        order: #{$name};
      }
    }
  }
}

//ROUNDED
@each $name, $value in $rounded {
  .rounded-#{$name} {
    border-radius: #{$value};
  }
  .rounded-t-#{$name} {
    border-top-left-radius: #{$value};
    border-top-right-radius: #{$value};
  }
  .rounded-b-#{$name} {
    border-bottom-left-radius: #{$value};
    border-bottom-right-radius: #{$value};
  }
  .rounded-r-#{$name} {
    border-top-right-radius: #{$value};
    border-bottom-right-radius: #{$value};
  }
  .rounded-l-#{$name} {
    border-top-left-radius: #{$value};
    border-bottom-left-radius: #{$value};
  }
  .rounded-tl-#{$name} {
    border-top-left-radius: #{$value};
  }
  .rounded-tr-#{$name} {
    border-top-right-radius: #{$value};
  }
  .rounded-bl-#{$name} {
    border-bottom-left-radius: #{$value};
  }
  .rounded-br-#{$name} {
    border-bottom-right-radius: #{$value};
  }
}

//MARGINS
@each $name in $margin-list {
  @if ($name == auto) {
    .ma-#{$name} {
      margin: #{$name} !important;
    }
    .mt-#{$name} {
      margin-top: #{$name} !important;
    }
    .mb-#{$name} {
      margin-bottom: #{$name} !important;
    }
    .ml-#{$name} {
      margin-left: #{$name} !important;
    }
    .mr-#{$name} {
      margin-right: #{$name} !important;
    }
    .mx-#{$name} {
      margin-left: #{$name} !important;
      margin-right: #{$name} !important;
    }
    .my-#{$name} {
      margin-top: #{$name} !important;
      margin-bottom: #{$name} !important;
    }
  } @else {
    .ma-#{$name} {
      margin: calc((#{$name}px) * 4) !important;
    }
    .mt-#{$name} {
      margin-top: calc((#{$name}px) * 4) !important;
    }
    .mb-#{$name} {
      margin-bottom: calc((#{$name}px) * 4) !important;
    }
    .ml-#{$name} {
      margin-left: calc((#{$name}px) * 4) !important;
    }
    .mr-#{$name} {
      margin-right: calc((#{$name}px) * 4) !important;
    }
    .mx-#{$name} {
      margin-left: calc((#{$name}px) * 4) !important;
      margin-right: calc((#{$name}px) * 4) !important;
    }
    .my-#{$name} {
      margin-top: calc((#{$name}px) * 4) !important;
      margin-bottom: calc((#{$name}px) * 4) !important;
    }

    @if ($name != 0) {
      .ma-n#{$name} {
        margin: calc((-#{$name}px) * 4) !important;
      }
      .mt-n#{$name} {
        margin-top: calc((-#{$name}px) * 4) !important;
      }
      .mb-n#{$name} {
        margin-bottom: calc((-#{$name}px) * 4) !important;
      }
      .ml-n#{$name} {
        margin-left: calc((-#{$name}px) * 4) !important;
      }
      .mr-n#{$name} {
        margin-right: calc((-#{$name}px) * 4) !important;
      }
      .mx-n#{$name} {
        margin-left: calc((-#{$name}px) * 4) !important;
        margin-right: calc((-#{$name}px) * 4) !important;
      }
      .my-n#{$name} {
        margin-top: calc((-#{$name}px) * 4) !important;
        margin-bottom: calc((-#{$name}px) * 4) !important;
      }
    }
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $margin-list {
      @if ($name == auto) {
        .ma-#{$size}-#{$name} {
          margin: #{$name} !important;
        }
        .mt-#{$size}-#{$name} {
          margin-top: #{$name} !important;
        }
        .mb-#{$size}-#{$name} {
          margin-bottom: #{$name} !important;
        }
        .ml-#{$size}-#{$name} {
          margin-left: #{$name} !important;
        }
        .mr-#{$size}-#{$name} {
          margin-right: #{$name} !important;
        }
        .mx-#{$size}-#{$name} {
          margin-left: #{$name} !important;
          margin-right: #{$name} !important;
        }
        .my-#{$size}-#{$name} {
          margin-top: #{$name} !important;
          margin-bottom: #{$name} !important;
        }
      } @else {
        .ma-#{$size}-#{$name} {
          margin: calc((#{$name}px) * 4) !important;
        }
        .mt-#{$size}-#{$name} {
          margin-top: calc((#{$name}px) * 4) !important;
        }
        .mb-#{$size}-#{$name} {
          margin-bottom: calc((#{$name}px) * 4) !important;
        }
        .ml-#{$size}-#{$name} {
          margin-left: calc((#{$name}px) * 4) !important;
        }
        .mr-#{$size}-#{$name} {
          margin-right: calc((#{$name}px) * 4) !important;
        }
        .mx-#{$size}-#{$name} {
          margin-left: calc((#{$name}px) * 4) !important;
          margin-right: calc((#{$name}px) * 4) !important;
        }
        .my-#{$name} {
          margin-top: calc((#{$name}px) * 4) !important;
          margin-bottom: calc((#{$name}px) * 4) !important;
        }

        @if ($name != 0) {
          .ma-#{$size}-n#{$name} {
            margin: calc((-#{$name}px) * 4) !important;
          }
          .mt-#{$size}-n#{$name} {
            margin-top: calc((-#{$name}px) * 4) !important;
          }
          .mb-#{$size}-n#{$name} {
            margin-bottom: calc((-#{$name}px) * 4) !important;
          }
          .ml-#{$size}-n#{$name} {
            margin-left: calc((-#{$name}px) * 4) !important;
          }
          .mr-#{$size}-n#{$name} {
            margin-right: calc((-#{$name}px) * 4) !important;
          }
          .mx-#{$size}-n#{$name} {
            margin-left: calc((-#{$name}px) * 4) !important;
            margin-right: calc((-#{$name}px) * 4) !important;
          }
          .my-#{$size}-n#{$name} {
            margin-top: calc((-#{$name}px) * 4) !important;
            margin-bottom: calc((-#{$name}px) * 4) !important;
          }
        }
      }
    }
  }
}

//PADDINGS
@each $name in $padding-list {
  .pa-#{$name} {
    padding: calc((#{$name}px) * 4) !important;
  }
  .pt-#{$name} {
    padding-top: calc((#{$name}px) * 4) !important;
  }
  .pb-#{$name} {
    padding-bottom: calc((#{$name}px) * 4) !important;
  }
  .pl-#{$name} {
    padding-left: calc((#{$name}px) * 4) !important;
  }
  .pr-#{$name} {
    padding-right: calc((#{$name}px) * 4) !important;
  }
  .px-#{$name} {
    padding-left: calc((#{$name}px) * 4) !important;
    padding-right: calc((#{$name}px) * 4) !important;
  }
  .py-#{$name} {
    padding-top: calc((#{$name}px) * 4) !important;
    padding-bottom: calc((#{$name}px) * 4) !important;
  }

  @if ($name != 0) {
    .pa-n#{$name} {
      padding: calc((-#{$name}px) * 4) !important;
    }
    .pt-n#{$name} {
      padding-top: calc((-#{$name}px) * 4) !important;
    }
    .pb-n#{$name} {
      padding-bottom: calc((-#{$name}px) * 4) !important;
    }
    .pl-n#{$name} {
      padding-left: calc((-#{$name}px) * 4) !important;
    }
    .pr-n#{$name} {
      padding-right: calc((-#{$name}px) * 4) !important;
    }
    .px-n#{$name} {
      padding-left: calc((-#{$name}px) * 4) !important;
      padding-right: calc((-#{$name}px) * 4) !important;
    }
    .py-n#{$name} {
      padding-top: calc((-#{$name}px) * 4) !important;
      padding-bottom: calc((-#{$name}px) * 4) !important;
    }
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $padding-list {
      .pa-#{$size}-#{$name} {
        padding: calc((#{$name}px) * 4) !important;
      }
      .pt-#{$size}-#{$name} {
        padding-top: calc((#{$name}px) * 4) !important;
      }
      .pb-#{$size}-#{$name} {
        padding-bottom: calc((#{$name}px) * 4) !important;
      }
      .pl-#{$size}-#{$name} {
        padding-left: calc((#{$name}px) * 4) !important;
      }
      .pr-#{$size}-#{$name} {
        padding-right: calc((#{$name}px) * 4) !important;
      }
      .px-#{$size}-#{$name} {
        padding-left: calc((#{$name}px) * 4) !important;
        padding-right: calc((#{$name}px) * 4) !important;
      }
      .py-#{$name} {
        padding-top: calc((#{$name}px) * 4) !important;
        padding-bottom: calc((#{$name}px) * 4) !important;
      }

      @if ($name != 0) {
        .pa-#{$size}-n#{$name} {
          padding: calc((-#{$name}px) * 4) !important;
        }
        .pt-#{$size}-n#{$name} {
          padding-top: calc((-#{$name}px) * 4) !important;
        }
        .pb-#{$size}-n#{$name} {
          padding-bottom: calc((-#{$name}px) * 4) !important;
        }
        .pl-#{$size}-n#{$name} {
          padding-left: calc((-#{$name}px) * 4) !important;
        }
        .pr-#{$size}-n#{$name} {
          padding-right: calc((-#{$name}px) * 4) !important;
        }
        .px-#{$size}-n#{$name} {
          padding-left: calc((-#{$name}px) * 4) !important;
          padding-right: calc((-#{$name}px) * 4) !important;
        }
        .py-#{$size}-n#{$name} {
          padding-top: calc((-#{$name}px) * 4) !important;
          padding-bottom: calc((-#{$name}px) * 4) !important;
        }
      }
    }
  }
}

//TYPOGRAPHY
@each $name in $text-list {
  .text-#{$name} {
    text-align: #{$name};
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name in $text-list {
      .text-#{$size}-#{$name} {
        text-align: #{$name};
      }
    }
  }
}

@each $type, $value in $font-weights {
  .font-weight-#{$type} {
    font-weight: #{$value};
  }
}

@each $name, $value in $headings {
  .text-#{$name} {
    font-size: map-deep-get($headings, #{$name}, 'size') !important;
    font-weight: map-deep-get($headings, #{$name}, 'weight');
    letter-spacing: map-deep-get($headings, #{$name}, 'letter-spacing') !important;
    line-height: map-deep-get($headings, #{$name}, 'line-height');
    font-family: map-deep-get($headings, #{$name}, 'font-family') !important;
  }
}

@each $size, $width in $grid-breakpoints {
  @media all and (min-width: #{$width}) {
    @each $name, $value in $headings {
      .text-#{$size}-#{$name} {
        font-size: map-deep-get($headings, #{$name}, 'size') !important;
        font-weight: map-deep-get($headings, #{$name}, 'weight');
        letter-spacing: map-deep-get($headings, #{$name}, 'letter-spacing') !important;
        line-height: map-deep-get($headings, #{$name}, 'line-height');
        font-family: map-deep-get($headings, #{$name}, 'font-family') !important;
      }
    }
  }
}
